<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.celonis.microservices</groupId>
	<artifactId>weather-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Weather API</name>
	<description>This project exposes the APIs for weather forecast</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<modules>
		<module>domain</module>
		<module>application</module>
		<module>infrastructure</module>
		<!--<module>infrastructure/adapter-in</module>
		<module>infrastructure/adapter-in/controller</module>
		<module>infrastructure/adapter-out</module>
		<module>infrastructure/adapter-out/database</module>
		<module>infrastructure/adapter-out/synchronous</module>-->
		<module>main</module>
	</modules>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<org.mapstruct.version>1.6.3</org.mapstruct.version>
		<docker.maven.plugin.version>0.46.0</docker.maven.plugin.version>
		<docker.image.name>celonis/${project.artifactId}</docker.image.name>
		<openapi.generator.maven.plugin.version>7.8.0</openapi.generator.maven.plugin.version>
		<test.containers.bom.version>1.20.6</test.containers.bom.version>
		<mysql.testcontainer.version>1.20.6</mysql.testcontainer.version>
		<wiremock.spring-boot.version>3.6.0</wiremock.spring-boot.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>9.0.0.CR1</version>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<version>${mysql.testcontainer.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-web-test-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<version>3.1.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wiremock.integrations</groupId>
			<artifactId>wiremock-spring-boot</artifactId>
			<version>${wiremock.spring-boot.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.celonis.microservices</groupId>
				<artifactId>application</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.celonis.microservices</groupId>
				<artifactId>domain</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.celonis.microservices</groupId>
				<artifactId>controller</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.celonis.microservices</groupId>
				<artifactId>database</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.celonis.microservices</groupId>
				<artifactId>synchronous</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${test.containers.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<!-- order of annotation processors is important.
								1. lombok
								2. mapstruct -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
